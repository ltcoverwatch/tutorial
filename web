

-----------------------------------
2020.10.07

@value注解，不能给static或者final修饰的变量赋值
使用@value，一定要把类注解上@Component或@Service之类，将其注入到容器
若给静态变量赋值，可用set()方法，首先在对应的类上加上@Component注解，在set方法上使用value注解（注意set方法不是静态的，否则无法赋值）

    @Value("${jwt.api-key}")
    public void setAPI_Key(String api_key) {
        TokenUtil.API_Key = api_key;
    }

跨域请求 目前认知： 后端controller上标@CrossOrigin
		    前端import axios from 'axios'
		    axios.defaults.baseURL = 'http://172.24.6.155:8888/api'
	            Vue.prototype.$axios = axios;



----------------------------------------------------
2020.10.09

镜像一览
docker images

容器一览
docker ps -a

运行中容器
docker ps

已经启动的项目 设置自启动
docker update --restart=always <CONTAINER ID>

启动项目时顺便设置自启动
docker run --restart=always

删除docker容器
docker rm -f <CONTAINER ID>

重命名
docker rename oldname newname
-----------------------------------------------------
2020.10.13

spring cloud gateway启动报错，更改springboot版本后解决

分环境配置yml文件，当dev与application.yml文件配置项冲突时，使用dev
spring:
  profiles:
    active: dev

yml配置mysql数据库连接时，数据库不在springboot项目本地时，可能报错不让访问
---------------------------------------------------
2020.10.14

@Bean注解 产生一个Bean对象，交给spring管理，产生Bean对象的方法Spring只调用一次
SpringIOC容器管理一个或者多个Bean，这些Bean需要在@Configuration注解下创建，在方法上使用

@Bean不仅可以作用在方法上，也可以作用在注解类型上，在运行时提供注册

工具类用@Component注解放入容器中，在用到的类里@Autowired注入

@ControllerAdvice是一个Controller增强器，可对controller中被@RequestMapping注解的方法加一些逻辑处理
注解了@ControllerAdvice的类的方法可以使用@ExceptionHandler，@InitBinder，@ModelAttribute
@ExceptionHandler：用于全局处理控制器里的异常
@ControllerAdvice注解将作用在所有注解了@RequestMapping的控制器的方法上

全局异常处理：
需要配合@ExceptionHandler使用。 当将异常抛到controller时,可以对异常进行统一处理,规定返回的json格式或是跳转到一个错误页面

目前感觉java的Timestamp类是处理日期的最好方法

实体校验，controller中用@Validated
-------------------------------------------------
2020.10.15

关机命令：shutdown -h now（立刻进行关机）

                  halt（立刻进行关机）

                  poweroff（立刻进行关机）

重启命令：shutdown -r now（现在重新启动计算机）

                  reboot（现在重新启动计算机）

区别：shutdown -h now和shutdown -r now必须是root用户或者具有root权限的用户才能使用，而halt和reboot是Linux系统中的任何用户都可使用，不需要root权限。

联系：halt 与 poweroff 具有相同的功能。

docker服务自动重启设置 systemctl enable docker.service

nginx服务器html文件夹里默认只认识index.html

nginx部署文章
https://juejin.im/post/6844903841951907847

1.先运行一个简单的nginx docker run -d -p 80:80 nginx
2.宿主机创建挂载用的文件夹 mkdir -p /nginx/{conf,conf.d,html,logs}
3.复制容器里的文件到宿主机路径 
docker cp 容器id:/etc/nginx/nginx.conf /nginx/conf/nginx.conf
docker cp 容器id:/etc/nginx/conf.d/default.conf /nginx/conf.d/default.conf
4.停止容器并删除容器 docker stop 容器id	docker rm 容器id
5.用挂载再次启动
docker run --name zoom_nginx -d -p 80:80 -v /nginx/html:/usr/share/nginx/html -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -v /nginx/logs:/var/log/nginx nginx
6.设置为自启动 docker update --restart=always <CONTAINER ID>

linux发行版开放端口
firewall-cmd --zone=public --add-port=80/tcp --permanent
------------------------------------
1.查看已安装java版本 rpm -qa | grep jdk
2.卸载所有jdk相关 yum -y remove 名字
3.重新安装jdk yum install java-1.8.0-openjdk-devel
4.查看版本 java -version
----------------------------------------
1.下载maven并放入linux
2.tar -zxvf 文件名 解压
3.移动 mv 文件名 /usr/local/maven3
4.配置环境变量
vi /etc/profile
export MAVEN_HOME=/usr/local/maven3
export MAVEN_HOME
export PATH=$PATH:$MAVEN_HOME/bin
5.查看版本 mvn -version
-------------------------------------------
2020.10.16

linux maven 打包springboot项目
1.项目文件传到linux上，删除test文件夹
2.cd进入项目文件夹，在pom.xml同一层运行 mvn package
3.若出错提示找不到，则为代理问题，给maven配置代理
  <proxies>
    <proxy>
      <active>true</active>
      <id>Https</id>
      <protocol>https</protocol>
      <host>clowd-proxy.chemi-con.co.jp</host>
      <port>8080</port>
    </proxy>
  </proxies>
4.mvn package没问题后，mvn clean，然后mvn package docker:build
5.查看镜像docker images，运行docker run --name 起名 -d -p 8080:8080 -t 镜像名
6.设置自启动
----------------------------------------------
2020.10.21

http://test-spf.chemi-con.co.jp/Service/Impl/APIWebGetServiceImpl.svc/LoginP
sessionID: d02abc25-fd7a-419d-9944-c1bdbe2a64ba
bf46fb90-9253-479d-80c2-ca17c8f4d883
9f377f8a-1d4a-48d1-91db-74a6963b5b10

UserId=tianchi&Password=tianchi1&Domain=&LoginServerId=&CultureInfoName=&MacAddress=&IpV4=&IpV6=

Unirest.post("http://httpbin.org")
       .field("fruit", "apple")
       .field("droid", "R2D2")
       .asEmpty();

  // This will post a simple name-value pair body the same as a HTML form. This looks like
  // `fruit=apple&droid=R2D2'

----------------------------------------------
2020.10.22

sessionId 每次会变化，不是固定字符串

<APIResult xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<APIReturnCode>0</APIReturnCode>
<APIReturnValue>
<SessionID>9f377f8a-1d4a-48d1-91db-74a6963b5b10</SessionID>
</APIReturnValue>
</APIResult>

试验文件夹
//SpaceFinder/開発企画書/新品種開発企画書印刷シート/CCM(営業)_Sales/201912
dataID 1701716

新品種開発企画書印刷シート dataID 163182

SessionId
SfParentId             163182
SfBranchId             4
DataTypeName           新品種開発企画書印刷シート
IsSearchCreateDate     0
IsSearchUpdateDate     1
IsSearchAccessDate     0
FromDate               2020/09/01
ToDate                 2020/10/22

----------------------------------------------------
2020-10-23

{
  "meetings": [
    {
      "created_at": "2020-10-28T01:38:42Z",
      "duration": 60,
      "host_id": "84UhZzBBSu2VQ6t0kmpv8Q",
      "id": 95677976853,
      "join_url": "https://zoom.us/j/95677976853?pwd=M2NnV3ZaVzRtSnVsbWd2QnBaYjJ3dz09",
      "start_time": "2020-10-29T05:00:00Z",
      "timezone": "Asia/Tokyo",
      "topic": "パナモータ",
      "type": 2,
      "uuid": "nyO5onFLRRmNLgnNNJHpkA=="
    },
    {
      "created_at": "2020-10-16T06:45:30Z",
      "duration": 330,
      "host_id": "84UhZzBBSu2VQ6t0kmpv8Q",
      "id": 99759810370,
      "join_url": "https://zoom.us/j/99759810370?pwd=MnlOdHVTVXN4cHcxZ0grZ1VhRjYzQT09",
      "start_time": "2020-11-10T03:30:00Z",
      "timezone": "Asia/Tokyo",
      "topic": "11月度カーエレ会議",
      "type": 2,
      "uuid": "Os1wipk3RyuHO1FIrV+uvA=="
    }
  ],
  "next_page_token": "",
  "page_size": 30,
  "total_records": 2
}
---------------------------------------------------------
2020.11.02

docker run --name zoom01back -d -p 8888:8888 -t --link zoom_mysql:zoom_mysql springboot/zoom01

docker springboot 连接同为docker的数据库
--link mysql容器名:yml文件配置的连接地址名

查看linux内存cpu占用等命令： top
vi filename :打开或新建文件

***第一次配置nginx，要打开防火墙80端口，并且重启
firewall-cmd --zone=public --add-port=80/tcp --permanent
firewall-cmd --reload

--------------

upstream my_server {                                                         
    server 172.24.5.179:8888;                                                
    keepalive 2000;
}
server {
    listen       80;                                                         
    server_name  172.24.5.180;                                               
    client_max_body_size 1024M;

    location / {
        proxy_pass http://my_server/;
        proxy_set_header Host $host:$server_port;
    }
}
